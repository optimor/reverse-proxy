# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-08 12:35
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ProxyHeader",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("header_name", models.CharField(max_length=255)),
                ("header_value", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="ProxyRewrite",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("from_regex", models.CharField(max_length=255)),
                ("to_regex", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="ProxySite",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.SlugField(
                        help_text="Human friendly name to identify proxy settings.",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True,
                        help_text="Proxied site thumbnail to display in dashboard.",
                        null=True,
                        upload_to="%Y%m%d%H%M",
                    ),
                ),
                (
                    "upstream",
                    models.CharField(
                        help_text="The URL of the proxied server. Requests will be "
                        "made to this URL with path appended to it.",
                        max_length=200,
                    ),
                ),
                (
                    "add_remote_user",
                    models.BooleanField(
                        default=False,
                        help_text="Whether to add the REMOTE_USER to the request in "
                        "case of an authenticated user.",
                    ),
                ),
                (
                    "default_content_type",
                    models.CharField(
                        default="application/octet-stream",
                        help_text="The Content-Type that will be added to the response "
                        "in case the upstream server doesn't send it and if "
                        "mimetypes.guess_type is not able to guess.",
                        max_length=200,
                    ),
                ),
                (
                    "retries",
                    models.PositiveIntegerField(
                        default=0, help_text="The max number of attempts for a request."
                    ),
                ),
                (
                    "rewrite",
                    models.TextField(
                        blank=True,
                        help_text="A list of tuples in the style (from, to) where from "
                        "must by a valid regex expression and to a valid URL. If "
                        "request.get_full_path matches the from expression the request "
                        "will be redirected to to with an status code 302. Matches "
                        "groups can be used to pass parts from the from URL to the to "
                        "URL using numbered groups.",
                        null=True,
                    ),
                ),
                (
                    "request_headers",
                    models.TextField(
                        blank=True,
                        help_text="A list of tuples in the style (key, value) where key"
                        " must by a valid HEADER and key a valid header value.",
                        null=True,
                    ),
                ),
            ],
            options={"verbose_name_plural": "proxy sites"},
        ),
        migrations.AddField(
            model_name="proxyrewrite",
            name="proxy_site",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="proxies.ProxySite"
            ),
        ),
        migrations.AddField(
            model_name="proxyheader",
            name="proxy_site",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="proxies.ProxySite"
            ),
        ),
    ]
